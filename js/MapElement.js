// Generated by CoffeeScript 1.10.0
(function() {
  var MapElement;

  MapElement = (function() {
    function MapElement(type, spritesheetGlobal, size) {
      var i, k;
      this.type = type;
      this.sprites = null;
      this.spritesC = [];
      this.tiles = [];
      switch (this.type) {
        case "water":
          this.sprites = [new SpriteElement(spritesheetGlobal, 0, 1), new SpriteElement(spritesheetGlobal, 1, 1)];
          break;
        case "grass":
          this.sprites = [new SpriteElement(spritesheetGlobal, 0, 0), new SpriteElement(spritesheetGlobal, 1, 0)];
          for (i = k = 2; k <= 10; i = ++k) {
            this.spritesC.push(new SpriteElement(spritesheetGlobal, i, 0));
          }
          break;
        case "sand":
          this.sprites = [new SpriteElement(spritesheetGlobal, 0, 2), new SpriteElement(spritesheetGlobal, 1, 2)];
          break;
        case "mountain":
          this.sprites = [new SpriteElement(spritesheetGlobal, 0, 3)];
      }
      this.size = size / spritesheetGlobal.offset;
      this.building = null;
      if (this.type === "water") {
        this.res = 200;
      } else {
        this.res = 50;
      }
      this.init();
    }

    MapElement.prototype.init = function() {
      var i, j, k, l, numTem, ref, ref1, results, temp;
      results = [];
      for (i = k = 0, ref = this.size; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
        temp = [];
        for (j = l = 0, ref1 = this.size; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {
          numTem = Math.round(Math.random() * (this.sprites.length - 1));
          temp.push(this.sprites[numTem]);
        }
        results.push(this.tiles.push(temp));
      }
      return results;
    };

    MapElement.prototype.draw = function(ctx, x, y) {
      var i, j, k, ref, results, spriteElem;
      results = [];
      for (i = k = 0, ref = this.size; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
        results.push((function() {
          var l, ref1, results1;
          results1 = [];
          for (j = l = 0, ref1 = this.size; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {
            spriteElem = this.tiles[i][j];
            results1.push(ctx.drawImage(spriteElem.spritesheet.image, spriteElem.i * 10, spriteElem.j * 10, 10, 10, x * 50 + i * 10, y * 50 + j * 10, 10, 10));
          }
          return results1;
        }).call(this));
      }
      return results;
    };

    MapElement.prototype.changePixel = function(i, j, sprites) {
      var numTem;
      numTem = Math.round(Math.random() * (sprites.length - 1));
      return this.tiles[i][j] = sprites[numTem];
    };

    return MapElement;

  })();

  window.MapElement = MapElement;

}).call(this);
