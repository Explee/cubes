// Generated by CoffeeScript 1.9.0
(function() {
  var Building;

  Building = (function() {
    function Building(_at_type, spritesheet) {
      var BUILDING_TYPE_FARM, BUILDING_TYPE_GRANARY, BUILDING_TYPE_HARBOR, BUILDING_TYPE_HOUSE, BUILDING_TYPE_HUNTING_LODGE, BUILDING_TYPE_PASTURE, BUILDING_TYPE_SAWMILL, BUILDING_TYPE_TEMPLE, i, j, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;
      this.type = _at_type;
      this.spriteElems = [];
      this.posX = 0;
      this.posY = 0;
      BUILDING_TYPE_TEMPLE = 0;
      BUILDING_TYPE_HOUSE = 1;
      BUILDING_TYPE_FARM = 2;
      BUILDING_TYPE_GRANARY = 3;
      BUILDING_TYPE_PASTURE = 4;
      BUILDING_TYPE_SAWMILL = 5;
      BUILDING_TYPE_HUNTING_LODGE = 6;
      BUILDING_TYPE_HARBOR = 7;
      switch (this.type) {
        case BUILDING_TYPE_TEMPLE:
          for (j = _i = 0; _i <= 1; j = ++_i) {
            for (i = _j = 0; _j <= 1; i = ++_j) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, j));
            }
          }
          break;
        case BUILDING_TYPE_HOUSE:
          for (j = _k = 0; _k <= 1; j = ++_k) {
            for (i = _l = 0; _l <= 1; i = ++_l) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 2 + j));
            }
          }
          break;
        case BUILDING_TYPE_GRANARY:
          for (j = _m = 0; _m <= 1; j = ++_m) {
            for (i = _n = 0; _n <= 1; i = ++_n) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 4 + j));
            }
          }
          break;
        case BUILDING_TYPE_FARM:
          for (j = _o = 0; _o <= 1; j = ++_o) {
            for (i = _p = 0; _p <= 1; i = ++_p) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 6 + j));
            }
          }
          break;
        case BUILDING_TYPE_PASTURE:
          for (j = _q = 0; _q <= 1; j = ++_q) {
            for (i = _r = 0; _r <= 1; i = ++_r) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 8 + j));
            }
          }
          break;
        case BUILDING_TYPE_SAWMILL:
          for (j = _s = 0; _s <= 1; j = ++_s) {
            for (i = _t = 0; _t <= 1; i = ++_t) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 10 + j));
            }
          }
          break;
        case BUILDING_TYPE_HUNTING_LODGE:
          for (j = _u = 0; _u <= 1; j = ++_u) {
            for (i = _v = 0; _v <= 1; i = ++_v) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 12 + j));
            }
          }
          break;
        case BUILDING_TYPE_HARBOR:
          for (j = _w = 0; _w <= 1; j = ++_w) {
            for (i = _x = 0; _x <= 1; i = ++_x) {
              this.spriteElems.push(new SpriteElement(spritesheet, i, 14 + j));
            }
          }
      }
    }

    Building.prototype.draw = function(ctx) {
      var x, y;
      x = this.posX * 50 + 2 * 10;
      y = this.posY * 50 + 2 * 10;
      ctx.drawImage(this.spriteElems[0].spritesheet.image, this.spriteElems[0].i * 10, this.spriteElems[0].j * 10, 10, 10, x, y, 10, 10);
      ctx.drawImage(this.spriteElems[1].spritesheet.image, this.spriteElems[1].i * 10, this.spriteElems[1].j * 10, 10, 10, x + 10, y, 10, 10);
      ctx.drawImage(this.spriteElems[2].spritesheet.image, this.spriteElems[2].i * 10, this.spriteElems[2].j * 10, 10, 10, x, y + 10, 10, 10);
      return ctx.drawImage(this.spriteElems[3].spritesheet.image, this.spriteElems[3].i * 10, this.spriteElems[3].j * 10, 10, 10, x + 10, y + 10, 10, 10);
    };

    return Building;

  })();

  if (typeof module !== 'undefined' && module.exports) {
    exports.Building = Building;
  } else {
    window.Building = Building;
  }

}).call(this);
