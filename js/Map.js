// Generated by CoffeeScript 1.9.0
(function() {
  var Map,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Map = (function() {
    function Map(_at_ctx, width, height, _at_tiles) {
      this.ctx = _at_ctx;
      this.tiles = _at_tiles != null ? _at_tiles : [];
      this.sizeCase = 50;
      this.widthMap = Math.round(width / this.sizeCase);
      this.heightMap = Math.round(height / this.sizeCase);
      this.tiles = [];
      this.spritesheet = new Spritesheet('img/spriteGlobal.png', 10);
    }

    Map.prototype.init = function() {
      var centerX, centerY, i, j, mapElement, r, tempArray, _i, _j, _k, _l, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _results, _results1, _results2;
      centerX = Math.round(this.widthMap / 2) - 2;
      centerY = Math.floor(this.heightMap / 2);
      for (i = _i = 0, _ref = this.widthMap; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        tempArray = [];
        for (j = _j = 0, _ref1 = this.heightMap; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
          if (__indexOf.call((function() {
            _results = [];
            for (var _k = _ref2 = centerX - 1, _ref3 = centerX + 2; _ref2 <= _ref3 ? _k <= _ref3 : _k >= _ref3; _ref2 <= _ref3 ? _k++ : _k--){ _results.push(_k); }
            return _results;
          }).apply(this), i) >= 0 && __indexOf.call((function() {
            _results1 = [];
            for (var _l = _ref4 = centerY - 1, _ref5 = centerY + 2; _ref4 <= _ref5 ? _l <= _ref5 : _l >= _ref5; _ref4 <= _ref5 ? _l++ : _l--){ _results1.push(_l); }
            return _results1;
          }).apply(this), j) >= 0) {
            r = Math.random();
            if (r <= 0.05) {
              mapElement = new MapElement('mountain', this.spritesheet, this.sizeCase);
            } else if (r > 0.1 && r < 0.2) {
              mapElement = new MapElement('sand', this.spritesheet, this.sizeCase);
            } else {
              mapElement = new MapElement('grass', this.spritesheet, this.sizeCase);
            }
          } else {
            mapElement = new MapElement('water', this.spritesheet, this.sizeCase);
          }
          tempArray.push(mapElement);
        }
        this.tiles.push(tempArray);
      }
      _results2 = [];
      for (i = _m = 0, _ref6 = this.widthMap; 0 <= _ref6 ? _m <= _ref6 : _m >= _ref6; i = 0 <= _ref6 ? ++_m : --_m) {
        _results2.push((function() {
          var _n, _ref7, _results3;
          _results3 = [];
          for (j = _n = 0, _ref7 = this.heightMap; 0 <= _ref7 ? _n <= _ref7 : _n >= _ref7; j = 0 <= _ref7 ? ++_n : --_n) {
            _results3.push(this.addShiny(i, j));
          }
          return _results3;
        }).call(this));
      }
      return _results2;
    };

    Map.prototype.addShiny = function(i, j) {
      var k, r, _i, _j, _k, _l, _results;
      if (this.tiles[i][j].type !== 'water') {
        if ((this.tiles[i - 1][j] != null) && this.tiles[i - 1][j].type !== this.tiles[i][j].type) {
          for (k = _i = 0; _i <= 4; k = ++_i) {
            r = Math.random();
            if (r > 0.7) {
              this.tiles[i][j].changePixel(0, k, this.tiles[i - 1][j].sprites);
            }
          }
        }
        if ((this.tiles[i + 1][j] != null) && this.tiles[i + 1][j].type !== this.tiles[i][j].type) {
          for (k = _j = 0; _j <= 4; k = ++_j) {
            r = Math.random();
            if (r > 0.7) {
              this.tiles[i][j].changePixel(4, k, this.tiles[i + 1][j].sprites);
            }
          }
        }
        if ((this.tiles[i][j - 1] != null) && this.tiles[i][j - 1].type !== this.tiles[i][j].type) {
          for (k = _k = 0; _k <= 4; k = ++_k) {
            r = Math.random();
            if (r > 0.7) {
              this.tiles[i][j].changePixel(k, 0, this.tiles[i][j - 1].sprites);
            }
          }
        }
        if ((this.tiles[i][j + 1] != null) && this.tiles[i][j + 1].type !== this.tiles[i][j].type) {
          _results = [];
          for (k = _l = 0; _l <= 4; k = ++_l) {
            r = Math.random();
            if (r > 0.7) {
              _results.push(this.tiles[i][j].changePixel(k, 4, this.tiles[i][j + 1].sprites));
            } else {
              _results.push(void 0);
            }
          }
          return _results;
        }
      }
    };

    Map.prototype.randomMap = function() {
      return console.log('randomize');
    };

    Map.prototype.addMapElement = function(type, i, j) {
      this.tiles[i][j] = new MapElement(type, this.spritesheet, this.sizeCase);
      this.addShiny(i, j);
      return this.draw();
    };

    Map.prototype.draw = function() {
      var i, j, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.widthMap; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (j = _j = 0, _ref1 = this.heightMap; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
            _results1.push(this.tiles[i][j].draw(this.ctx, i, j));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return Map;

  })();

  window.Map = Map;

}).call(this);
